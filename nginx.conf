
#user  nobody;  #如果此处访问目录没有权限 请使用拥有权限的用户 例如root
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;



    sendfile        on;
    #tcp_nopush     on;



    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
	

	
	# upstream 上游服务器 配置负载均衡 
	upstream  backServer1{
		server 127.0.0.1:8080 weight=1;
		server 127.0.0.1:8081 weight=2;
		# ip_hash; # ip绑定 使来自同一个IP的访客固定访问一台后端服务器，并且可以有效解决动态网页存在的session共享问题。俗称IP绑定。
	}
    # upstream 上游服务器 配置负载均衡 
	upstream  backServer2{
		server 127.0.0.1:8082 weight=1;
		server 127.0.0.1:8083 weight=2;
		# ip_hash; # ip绑定 使来自同一个IP的访客固定访问一台后端服务器，并且可以有效解决动态网页存在的session共享问题。俗称IP绑定。
	}


    server {
        # 监听端口号
        listen       80;
	    # 服务名称 拦截  demo1.nginxstudy.com的访问请求  demo1.nginxstudy.com在host文件中指向127.0.0.1  生产环境应该是域名解析到服务器地址
        server_name  demo1.nginxstudy.com;
        location / {
            # proxy_pass 配置反向代理
            proxy_pass http://backServer1; 
            # nginx与上游服务器(真实访问的服务器)超时时间 后端服务器连接的超时时间_发起握手等候响应超时时间
            proxy_connect_timeout 1s;
            # nginx发送给上游服务器(真实访问的服务器)超时时间
            proxy_send_timeout 1s;
            # nginx接受上游服务器(真实访问的服务器)超时时间
            proxy_read_timeout 1s;
            index  index.html index.htm;
        }
    }
	server {
        # 监听端口号
        listen       80;
	    # 服务名称 拦截  demo2.nginxstudy.com的访问请求   demo2.nginxstudy.com在host文件中指向127.0.0.1 生产环境应该是域名解析到服务器地址
        server_name  demo2.nginxstudy.com;
        location / {
            # proxy_pass 配置反向代理
            proxy_pass http://backServer2; 
            # nginx与上游服务器(真实访问的服务器)超时时间 后端服务器连接的超时时间_发起握手等候响应超时时间
            proxy_connect_timeout 1s;
            # nginx发送给上游服务器(真实访问的服务器)超时时间
            proxy_send_timeout 1s;
            # nginx接受上游服务器(真实访问的服务器)超时时间
            proxy_read_timeout 1s;
            index  index.html index.htm;
        }
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
